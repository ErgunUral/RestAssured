name: PayTR Release Tests

on:
  push:
    tags:
      - 'v*'
      - 'release-*'
  release:
    types: [created, published]
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release Version'
        required: true
        default: 'v1.0.0'
        type: string
      environment:
        description: 'Target Environment'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging
          - pre-production
      test_level:
        description: 'Test Coverage Level'
        required: true
        default: 'comprehensive'
        type: choice
        options:
          - smoke
          - regression
          - comprehensive
          - full-suite

env:
  MAVEN_OPTS: -Xmx4096m
  JAVA_VERSION: '17'
  RELEASE_VERSION: ${{ github.event.inputs.release_version || github.ref_name }}
  TARGET_ENVIRONMENT: ${{ github.event.inputs.environment || 'production' }}
  TEST_LEVEL: ${{ github.event.inputs.test_level || 'comprehensive' }}

jobs:
  pre-release-validation:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    outputs:
      should_proceed: ${{ steps.validation.outputs.proceed }}
      release_notes: ${{ steps.validation.outputs.notes }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Validate Release Prerequisites
      id: validation
      run: |
        echo "Validating release prerequisites..."
        
        # Release tag formatını kontrol et
        if [[ "${{ env.RELEASE_VERSION }}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]] || [[ "${{ env.RELEASE_VERSION }}" =~ ^release-[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo "✅ Valid release version format: ${{ env.RELEASE_VERSION }}"
          echo "proceed=true" >> $GITHUB_OUTPUT
        else
          echo "❌ Invalid release version format: ${{ env.RELEASE_VERSION }}"
          echo "proceed=false" >> $GITHUB_OUTPUT
          exit 1
        fi
        
        # Release notları oluştur
        echo "notes=Release ${{ env.RELEASE_VERSION }} - PayTR Test Automation" >> $GITHUB_OUTPUT
        
    - name: Check Code Quality
      run: |
        echo "Checking code quality and standards..."
        
        # Maven compile kontrolü
        mvn clean compile -q
        
        # Test compilation kontrolü
        mvn test-compile -q
        
        echo "✅ Code quality checks passed"

  smoke-tests-release:
    runs-on: ubuntu-latest
    needs: pre-release-validation
    if: needs.pre-release-validation.outputs.should_proceed == 'true'
    timeout-minutes: 20
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Setup Chrome Browser
      uses: browser-actions/setup-chrome@latest
      
    - name: Install ChromeDriver
      uses: nanasess/setup-chromedriver@master
        
    - name: Run Release Smoke Tests
      run: |
        echo "Running release smoke tests for ${{ env.RELEASE_VERSION }}"
        
        # Smoke testleri çalıştır
        mvn clean test -Dsurefire.suiteXmlFiles=testng-paytr-smoke.xml -Dheadless=true -Denvironment=${{ env.TARGET_ENVIRONMENT }}
        
    - name: Upload Smoke Test Results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: release-smoke-test-results
        path: |
          target/surefire-reports/
          target/site/allure-maven-plugin/
        retention-days: 90

  regression-tests-release:
    runs-on: ubuntu-latest
    needs: [pre-release-validation, smoke-tests-release]
    if: needs.pre-release-validation.outputs.should_proceed == 'true' && needs.smoke-tests-release.result == 'success'
    timeout-minutes: 60
    
    strategy:
      matrix:
        test-suite: [payment, security, ui, api]
      fail-fast: true
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Setup Chrome Browser
      uses: browser-actions/setup-chrome@latest
      
    - name: Install ChromeDriver
      uses: nanasess/setup-chromedriver@master
        
    - name: Run Release Regression Tests - ${{ matrix.test-suite }}
      run: |
        echo "Running release regression tests for ${{ matrix.test-suite }}"
        
        case "${{ matrix.test-suite }}" in
          "payment")
            mvn clean test -Dsurefire.suiteXmlFiles=testng-paytr-regression.xml -Dgroups=payment -Dheadless=true -Denvironment=${{ env.TARGET_ENVIRONMENT }}
            ;;
          "security")
            mvn clean test -Dsurefire.suiteXmlFiles=testng-paytr-regression.xml -Dgroups=security -Dheadless=true -Denvironment=${{ env.TARGET_ENVIRONMENT }}
            ;;
          "ui")
            mvn clean test -Dsurefire.suiteXmlFiles=testng-paytr-regression.xml -Dgroups=ui -Dheadless=true -Denvironment=${{ env.TARGET_ENVIRONMENT }}
            ;;
          "api")
            mvn clean test -Dsurefire.suiteXmlFiles=testng-paytr-regression.xml -Dgroups=api -Dheadless=true -Denvironment=${{ env.TARGET_ENVIRONMENT }}
            ;;
        esac
        
    - name: Upload Regression Test Results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: release-regression-results-${{ matrix.test-suite }}
        path: |
          target/surefire-reports/
          target/site/allure-maven-plugin/
        retention-days: 90

  comprehensive-tests-release:
    runs-on: ubuntu-latest
    needs: [pre-release-validation, smoke-tests-release, regression-tests-release]
    if: |
      needs.pre-release-validation.outputs.should_proceed == 'true' && 
      needs.smoke-tests-release.result == 'success' && 
      needs.regression-tests-release.result == 'success' &&
      (env.TEST_LEVEL == 'comprehensive' || env.TEST_LEVEL == 'full-suite')
    timeout-minutes: 120
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Setup Chrome Browser
      uses: browser-actions/setup-chrome@latest
      
    - name: Install ChromeDriver
      uses: nanasess/setup-chromedriver@master
        
    - name: Run Comprehensive Release Tests
      run: |
        echo "Running comprehensive release tests for ${{ env.RELEASE_VERSION }}"
        
        if [ "${{ env.TEST_LEVEL }}" == "full-suite" ]; then
          # Tam test suite'i çalıştır
          mvn clean test -Dsurefire.suiteXmlFiles=testng-paytr-full.xml -Dheadless=true -Denvironment=${{ env.TARGET_ENVIRONMENT }} -DthreadCount=3 -Dparallel=methods
        else
          # Kapsamlı testler
          mvn clean test -Dsurefire.suiteXmlFiles=testng-paytr-suite.xml -Dheadless=true -Denvironment=${{ env.TARGET_ENVIRONMENT }}
        fi
        
    - name: Generate Comprehensive Allure Report
      if: always()
      run: |
        mvn allure:report
        
    - name: Upload Comprehensive Test Results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: release-comprehensive-test-results
        path: |
          target/surefire-reports/
          target/site/allure-maven-plugin/
          screenshots/
          test-screenshots/
        retention-days: 180

  security-validation-release:
    runs-on: ubuntu-latest
    needs: pre-release-validation
    if: needs.pre-release-validation.outputs.should_proceed == 'true'
    timeout-minutes: 45
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        
    - name: Run OWASP Dependency Check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: 'PayTR-Test-Automation-Release'
        path: '.'
        format: 'ALL'
        
    - name: Run Security Tests
      run: |
        echo "Running security validation tests..."
        mvn clean test -Dsurefire.suiteXmlFiles=testng-paytr-full.xml -Dgroups=security -Dheadless=true
        
    - name: Upload Security Reports
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: release-security-reports
        path: |
          reports/
          target/surefire-reports/
        retention-days: 180

  performance-validation-release:
    runs-on: ubuntu-latest
    needs: [pre-release-validation, smoke-tests-release]
    if: |
      needs.pre-release-validation.outputs.should_proceed == 'true' && 
      needs.smoke-tests-release.result == 'success' &&
      (env.TEST_LEVEL == 'comprehensive' || env.TEST_LEVEL == 'full-suite')
    timeout-minutes: 90
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Run Performance Validation Tests
      run: |
        echo "Running performance validation for release ${{ env.RELEASE_VERSION }}"
        
        # Performance testleri çalıştır
        mvn clean test -Dsurefire.suiteXmlFiles=testng-paytr-full.xml -Dgroups=performance -Dheadless=true -DthreadCount=5 -Dparallel=methods
        
    - name: Upload Performance Results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: release-performance-results
        path: |
          target/surefire-reports/
          target/site/allure-maven-plugin/
        retention-days: 180

  release-approval:
    runs-on: ubuntu-latest
    needs: [smoke-tests-release, regression-tests-release, security-validation-release]
    if: always()
    environment: production
    
    steps:
    - name: Calculate Release Test Results
      id: results
      run: |
        # Test sonuçlarını hesapla
        SMOKE_STATUS="${{ needs.smoke-tests-release.result }}"
        REGRESSION_STATUS="${{ needs.regression-tests-release.result }}"
        SECURITY_STATUS="${{ needs.security-validation-release.result }}"
        
        echo "smoke_status=$SMOKE_STATUS" >> $GITHUB_OUTPUT
        echo "regression_status=$REGRESSION_STATUS" >> $GITHUB_OUTPUT
        echo "security_status=$SECURITY_STATUS" >> $GITHUB_OUTPUT
        
        # Genel durum
        if [ "$SMOKE_STATUS" == "success" ] && [ "$REGRESSION_STATUS" == "success" ] && [ "$SECURITY_STATUS" == "success" ]; then
          echo "overall_status=success" >> $GITHUB_OUTPUT
          echo "release_ready=true" >> $GITHUB_OUTPUT
        else
          echo "overall_status=failure" >> $GITHUB_OUTPUT
          echo "release_ready=false" >> $GITHUB_OUTPUT
        fi
        
    - name: Create Release Test Summary
      run: |
        echo "## 🚀 PayTR Release Test Summary - ${{ env.RELEASE_VERSION }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Test Results:" >> $GITHUB_STEP_SUMMARY
        echo "- **Smoke Tests**: ${{ steps.results.outputs.smoke_status == 'success' && '✅ PASSED' || '❌ FAILED' }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Regression Tests**: ${{ steps.results.outputs.regression_status == 'success' && '✅ PASSED' || '❌ FAILED' }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Security Tests**: ${{ steps.results.outputs.security_status == 'success' && '✅ PASSED' || '❌ FAILED' }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Release Information:" >> $GITHUB_STEP_SUMMARY
        echo "- **Version**: ${{ env.RELEASE_VERSION }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Environment**: ${{ env.TARGET_ENVIRONMENT }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Test Level**: ${{ env.TEST_LEVEL }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Release Ready**: ${{ steps.results.outputs.release_ready == 'true' && '✅ YES' || '❌ NO' }}" >> $GITHUB_STEP_SUMMARY
        
    - name: Approve Release
      if: steps.results.outputs.release_ready == 'true'
      run: |
        echo "🎉 Release ${{ env.RELEASE_VERSION }} is approved for deployment!"
        echo "All test suites have passed successfully."
        
    - name: Block Release
      if: steps.results.outputs.release_ready == 'false'
      run: |
        echo "🚫 Release ${{ env.RELEASE_VERSION }} is blocked!"
        echo "Some test suites have failed. Please fix the issues before proceeding."
        exit 1

  notify-release-results:
    runs-on: ubuntu-latest
    needs: [release-approval, comprehensive-tests-release, performance-validation-release]
    if: always()
    
    steps:
    - name: Send Release Notification
      run: |
        if [ "${{ needs.release-approval.result }}" == "success" ]; then
          echo "✅ PayTR Release ${{ env.RELEASE_VERSION }} - All Tests Passed!"
          echo "Release is ready for deployment to ${{ env.TARGET_ENVIRONMENT }}"
        else
          echo "❌ PayTR Release ${{ env.RELEASE_VERSION }} - Tests Failed!"
          echo "Release is blocked. Please check the test results."
        fi
        
    # Slack notification for release
    - name: Slack Release Notification
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ needs.release-approval.result }}
        channel: '#paytr-releases'
        webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
        fields: repo,message,commit,author,action,eventName,ref,workflow
        custom_payload: |
          {
            "text": "PayTR Release Test Results",
            "attachments": [{
              "color": "${{ needs.release-approval.result == 'success' && 'good' || 'danger' }}",
              "fields": [{
                "title": "Release Version",
                "value": "${{ env.RELEASE_VERSION }}",
                "short": true
              }, {
                "title": "Environment",
                "value": "${{ env.TARGET_ENVIRONMENT }}",
                "short": true
              }, {
                "title": "Status",
                "value": "${{ needs.release-approval.result == 'success' && '✅ APPROVED' || '❌ BLOCKED' }}",
                "short": true
              }]
            }]
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      continue-on-error: true